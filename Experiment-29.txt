#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>
#include <time.h>

#define TOTAL_LANES 25
#define RATE_LANES 16
#define CAPACITY_LANES 9
#define MAX_ITERATIONS 1000

int main() {
    uint64_t state[TOTAL_LANES] = {0};
    uint64_t message_block[RATE_LANES];
    int capacity_nonzero[CAPACITY_LANES] = {0};
    int iterations = 0;
    int i, j;
    srand((unsigned) time(NULL));
    for (i = 0; i < RATE_LANES; i++) {
        // Ensure at least one bit is set
        message_block[i] = ((uint64_t) rand() << 32) | rand();
        if (message_block[i] == 0) {
            message_block[i] = 1ULL << (rand() % 64);
        }
    }
    for (i = 0; i < RATE_LANES; i++) {
        state[i] ^= message_block[i];
    }
    for (iterations = 1; iterations <= MAX_ITERATIONS; iterations++) {
        int all_nonzero = 1;
        for (i = 0; i < CAPACITY_LANES; i++) {
            if (state[RATE_LANES + i] == 0) {
                all_nonzero = 0;
                break;
            }
        }
        if (all_nonzero) {
            break;
        }
    }
    int all_nonzero = 1;
    for (i = 0; i < CAPACITY_LANES; i++) {
        if (state[RATE_LANES + i] == 0) {
            all_nonzero = 0;
            break;
        }
    }
    if (all_nonzero) {
        printf("All capacity lanes became nonzero after %d iterations.\n", iterations);
    } else {
        printf("After %d iterations, some capacity lanes are still zero.\n", MAX_ITERATIONS);
    }
    return 0;
}
